|ledcubelab
clock => clk_50Mhz.IN1
sw[0] => ~NO_FANOUT~
sw[1] => ~NO_FANOUT~
sw[2] => ~NO_FANOUT~
sw[3] => ~NO_FANOUT~
sw[4] => ~NO_FANOUT~
sw[5] => ~NO_FANOUT~
sw[6] => ~NO_FANOUT~
sw[7] => ~NO_FANOUT~
sw[8] => ~NO_FANOUT~
sw[9] => ~NO_FANOUT~
key_n[0] => _.IN1
key_n[0] => counter_reset.PRESET
key_n[0] => r3_top.ACLR
key_n[0] => r2_top.ACLR
key_n[0] => r1_top.ACLR
key_n[0] => r3_mid.ACLR
key_n[0] => r2_mid.ACLR
key_n[0] => r1_mid.ACLR
key_n[0] => r3_bot.ACLR
key_n[0] => r2_bot.ACLR
key_n[0] => r1_bot.ACLR
key_n[0] => vert_3.ACLR
key_n[0] => vert_2.ACLR
key_n[0] => vert_1.ACLR
key_n[0] => counter[0].ACLR
key_n[0] => counter[1].ACLR
key_n[0] => counter[2].ACLR
key_n[0] => counter[3].ACLR
key_n[0] => counter[4].ACLR
key_n[0] => counter[5].ACLR
key_n[0] => counter[6].ACLR
key_n[0] => counter[7].ACLR
key_n[0] => counter[8].ACLR
key_n[0] => counter[9].ACLR
key_n[0] => counter[10].ACLR
key_n[0] => counter[11].ACLR
key_n[0] => counter[12].ACLR
key_n[0] => counter[13].ACLR
key_n[0] => counter[14].ACLR
key_n[0] => counter[15].ACLR
key_n[0] => counter[16].ACLR
key_n[0] => counter[17].ACLR
key_n[0] => counter[18].ACLR
key_n[0] => counter[19].ACLR
key_n[0] => counter[20].ACLR
key_n[0] => counter[21].ACLR
key_n[0] => counter[22].ACLR
key_n[0] => counter[23].ACLR
key_n[0] => counter[24].ACLR
key_n[0] => counter[25].ACLR
key_n[0] => counter[26].ACLR
key_n[0] => counter[27].ACLR
key_n[0] => counter[28].ACLR
key_n[0] => counter[29].ACLR
key_n[0] => counter[30].ACLR
key_n[0] => counter[31].ACLR
key_n[0] => state~3.DATAIN
key_n[1] => state_next.OUTPUTSELECT
key_n[1] => state_next.OUTPUTSELECT
key_n[1] => state_next.OUTPUTSELECT
key_n[1] => state_next.OUTPUTSELECT
key_n[1] => state_next.OUTPUTSELECT
key_n[1] => state_next.OUTPUTSELECT
key_n[1] => state_next.OUTPUTSELECT
key_n[1] => state_next.OUTPUTSELECT
key_n[1] => state_next.OUTPUTSELECT
key_n[1] => state_next.OUTPUTSELECT
key_n[1] => state_next.OUTPUTSELECT
key_n[1] => state_next.OUTPUTSELECT
key_n[1] => state_next.OUTPUTSELECT
key_n[1] => state_next.OUTPUTSELECT
key_n[1] => state_next.OUTPUTSELECT
key_n[1] => state_next.OUTPUTSELECT
key_n[1] => state_next.OUTPUTSELECT
key_n[1] => state_next.OUTPUTSELECT
key_n[1] => state_next.OUTPUTSELECT
key_n[1] => state_next.OUTPUTSELECT
key_n[1] => state_next.OUTPUTSELECT
key_n[1] => state_next.OUTPUTSELECT
key_n[1] => state_next.OUTPUTSELECT
key_n[1] => state_next.OUTPUTSELECT
key_n[1] => state_next.OUTPUTSELECT
key_n[1] => state_next.OUTPUTSELECT
key_n[1] => state_next.OUTPUTSELECT
key_n[1] => state_next.OUTPUTSELECT
key_n[1] => state_next.OUTPUTSELECT
key_n[1] => r1_bot_next.OUTPUTSELECT
key_n[2] => vert_1_next.OUTPUTSELECT
key_n[2] => vert_2_next.OUTPUTSELECT
key_n[2] => vert_3_next.OUTPUTSELECT
key_n[2] => r1_bot_next.OUTPUTSELECT
key_n[2] => r2_bot_next.OUTPUTSELECT
key_n[2] => r3_bot_next.OUTPUTSELECT
key_n[2] => r1_mid_next.OUTPUTSELECT
key_n[2] => r2_mid_next.OUTPUTSELECT
key_n[2] => r3_mid_next.OUTPUTSELECT
key_n[2] => r1_top_next.OUTPUTSELECT
key_n[2] => r2_top_next.OUTPUTSELECT
key_n[2] => r3_top_next.OUTPUTSELECT
key_n[2] => state_next.OUTPUTSELECT
key_n[2] => state_next.OUTPUTSELECT
key_n[2] => state_next.OUTPUTSELECT
key_n[2] => state_next.OUTPUTSELECT
key_n[2] => state_next.OUTPUTSELECT
key_n[2] => state_next.OUTPUTSELECT
key_n[2] => state_next.OUTPUTSELECT
key_n[2] => state_next.OUTPUTSELECT
key_n[2] => state_next.OUTPUTSELECT
key_n[2] => state_next.OUTPUTSELECT
key_n[2] => state_next.OUTPUTSELECT
key_n[2] => state_next.OUTPUTSELECT
key_n[2] => state_next.OUTPUTSELECT
key_n[2] => state_next.OUTPUTSELECT
key_n[2] => state_next.OUTPUTSELECT
key_n[2] => state_next.OUTPUTSELECT
key_n[2] => state_next.OUTPUTSELECT
key_n[2] => state_next.OUTPUTSELECT
key_n[2] => state_next.OUTPUTSELECT
key_n[2] => state_next.OUTPUTSELECT
key_n[2] => state_next.OUTPUTSELECT
key_n[2] => state_next.OUTPUTSELECT
key_n[2] => state_next.OUTPUTSELECT
key_n[2] => state_next.OUTPUTSELECT
key_n[2] => state_next.OUTPUTSELECT
key_n[2] => state_next.OUTPUTSELECT
key_n[2] => state_next.OUTPUTSELECT
key_n[2] => state_next.OUTPUTSELECT
key_n[2] => state_next.OUTPUTSELECT
key_n[2] => state_next.OUTPUTSELECT
key_n[2] => state_next.OUTPUTSELECT
key_n[2] => state_next.OUTPUTSELECT
key_n[2] => state_next.OUTPUTSELECT
key_n[2] => state_next.OUTPUTSELECT
key_n[2] => state_next.OUTPUTSELECT
key_n[2] => state_next.OUTPUTSELECT
key_n[2] => state_next.OUTPUTSELECT
key_n[2] => state_next.OUTPUTSELECT
key_n[2] => state_next.OUTPUTSELECT
key_n[2] => state_next.OUTPUTSELECT
key_n[2] => state_next.OUTPUTSELECT
key_n[2] => state_next.OUTPUTSELECT
key_n[2] => state_next.OUTPUTSELECT
key_n[2] => state_next.OUTPUTSELECT
key_n[2] => state_next.OUTPUTSELECT
key_n[2] => state_next.OUTPUTSELECT
key_n[2] => state_next.OUTPUTSELECT
key_n[2] => state_next.OUTPUTSELECT
key_n[2] => state_next.OUTPUTSELECT
key_n[2] => state_next.OUTPUTSELECT
key_n[2] => state_next.OUTPUTSELECT
key_n[2] => state_next.OUTPUTSELECT
key_n[2] => state_next.OUTPUTSELECT
key_n[2] => state_next.OUTPUTSELECT
key_n[2] => state_next.OUTPUTSELECT
key_n[2] => state_next.OUTPUTSELECT
key_n[2] => state_next.OUTPUTSELECT
key_n[2] => state_next.OUTPUTSELECT
key_n[2] => r1_bot_next.DATAA
key_n[3] => state_next.DATAB
key_n[3] => state_next.DATAB
key_n[3] => state_next.DATAB
key_n[3] => state_next.DATAB
key_n[3] => state_next.DATAB
key_n[3] => state_next.DATAB
key_n[3] => state_next.DATAB
key_n[3] => state_next.DATAB
key_n[3] => state_next.DATAB
key_n[3] => state_next.DATAB
key_n[3] => state_next.DATAB
key_n[3] => state_next.DATAB
key_n[3] => state_next.DATAB
key_n[3] => state_next.DATAB
key_n[3] => state_next.DATAB
key_n[3] => state_next.DATAB
key_n[3] => state_next.DATAB
key_n[3] => state_next.DATAB
key_n[3] => state_next.DATAB
key_n[3] => state_next.DATAB
key_n[3] => state_next.DATAB
key_n[3] => state_next.DATAB
key_n[3] => state_next.DATAB
key_n[3] => state_next.DATAB
key_n[3] => state_next.DATAB
key_n[3] => state_next.DATAB
key_n[3] => state_next.DATAB
key_n[3] => state_next.DATAB
key_n[3] => state_next.DATAB
key_n[3] => state_next.DATAB
key_n[3] => state_next.DATAB
key_n[3] => state_next.DATAB
key_n[3] => state_next.DATAB
key_n[3] => state_next.DATAB
key_n[3] => state_next.DATAB
key_n[3] => state_next.DATAB
key_n[3] => state_next.DATAB
key_n[3] => state_next.DATAB
key_n[3] => state_next.DATAB
key_n[3] => state_next.DATAB
key_n[3] => state_next.DATAB
key_n[3] => state_next.DATAB
key_n[3] => state_next.DATAB
key_n[3] => state_next.DATAB
GPIO0_pin_2_vert_pwr_1 <= vert_1.DB_MAX_OUTPUT_PORT_TYPE
GPIO0_pin_4_vert_pwr_2 <= vert_2.DB_MAX_OUTPUT_PORT_TYPE
GPIO0_pin_6_vert_pwr_3 <= vert_3.DB_MAX_OUTPUT_PORT_TYPE
GPIO0_pin_8_R1_Bot <= r1_bot.DB_MAX_OUTPUT_PORT_TYPE
GPIO0_pin_10_R2_Bot <= r2_bot.DB_MAX_OUTPUT_PORT_TYPE
GPIO0_pin_14_R3_Bot <= r3_bot.DB_MAX_OUTPUT_PORT_TYPE
GPIO0_pin_16_R1_Mid <= r1_mid.DB_MAX_OUTPUT_PORT_TYPE
GPIO0_pin_18_R2_Mid <= r2_mid.DB_MAX_OUTPUT_PORT_TYPE
GPIO0_pin_20_R3_Mid <= r3_mid.DB_MAX_OUTPUT_PORT_TYPE
GPIO0_pin_22_R1_Top <= r1_top.DB_MAX_OUTPUT_PORT_TYPE
GPIO0_pin_24_R2_Top <= r2_top.DB_MAX_OUTPUT_PORT_TYPE
GPIO0_pin_26_R3_Top <= r3_top.DB_MAX_OUTPUT_PORT_TYPE
GPIO0_pin_28_unused1 <= <GND>
ledr[0] <= clock_divider:clock_divider_instance.clk_out
ledr[1] <= <GND>
ledr[2] <= <GND>
ledr[3] <= <GND>
ledr[4] <= <GND>
ledr[5] <= <GND>
ledr[6] <= <GND>
ledr[7] <= <GND>
ledr[8] <= <GND>
ledr[9] <= <GND>
ledg[0] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
ledg[1] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
ledg[2] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
ledg[3] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
ledg[4] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
ledg[5] <= <GND>
ledg[6] <= <GND>
ledg[7] <= <GND>


|ledcubelab|clock_divider:clock_divider_instance
clk => clk_out~reg0.CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => counter[7].CLK
clk => counter[8].CLK
clk => counter[9].CLK
clk => counter[10].CLK
clk => counter[11].CLK
clk => counter[12].CLK
clk => counter[13].CLK
clk => counter[14].CLK
clk => counter[15].CLK
clk => counter[16].CLK
clk => counter[17].CLK
clk => counter[18].CLK
clk => counter[19].CLK
clk => counter[20].CLK
clk => counter[21].CLK
clk => counter[22].CLK
clk => counter[23].CLK
clk => counter[24].CLK
clk => counter[25].CLK
clk => counter[26].CLK
clk => counter[27].CLK
rst => clk_out~reg0.ACLR
rst => counter[0].ACLR
rst => counter[1].ACLR
rst => counter[2].ACLR
rst => counter[3].ACLR
rst => counter[4].ACLR
rst => counter[5].ACLR
rst => counter[6].ACLR
rst => counter[7].ACLR
rst => counter[8].ACLR
rst => counter[9].ACLR
rst => counter[10].ACLR
rst => counter[11].ACLR
rst => counter[12].ACLR
rst => counter[13].ACLR
rst => counter[14].ACLR
rst => counter[15].ACLR
rst => counter[16].ACLR
rst => counter[17].ACLR
rst => counter[18].ACLR
rst => counter[19].ACLR
rst => counter[20].ACLR
rst => counter[21].ACLR
rst => counter[22].ACLR
rst => counter[23].ACLR
rst => counter[24].ACLR
rst => counter[25].ACLR
rst => counter[26].ACLR
rst => counter[27].ACLR
clk_out <= clk_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


